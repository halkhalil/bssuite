{"name":"Bssuite","tagline":"business solution suite","body":"[![Build Status](https://travis-ci.org/pkcool/bssuite.svg)](https://travis-ci.org/pkcool/bssuite)\r\n[![Built with Grunt](https://cdn.gruntjs.com/builtwith.png)](http://gruntjs.com/)\r\n[![Stories in Ready](https://badge.waffle.io/pkcool/bssuite.svg?label=ready&title=Ready)](http://waffle.io/pkcool/bssuite)\r\n\r\n\r\n# Business Solution Suite \r\n\r\n[![Join the chat at https://gitter.im/pkcool/bssuite](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/pkcool/bssuite?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n\r\nbssuite was generated using JHipster, you can find documentation and help at [JHipster][].\r\n\r\nBefore you can build this project, you must install and configure the following dependencies on your machine:\r\n\r\n1. [Node.js][]: We use Node to run a development web server and build the project.\r\n   Depending on your system, you can install Node either from source or as a pre-packaged bundle.\r\n\r\nAfter installing Node, you should be able to run the following command to install development tools (like\r\n[Bower][] and [BrowserSync][]). You will only need to run this command when dependencies change in package.json.\r\n\r\n    npm install\r\n\r\nWe use [Grunt][] as our build system. Install the grunt command-line tool globally with:\r\n\r\n    npm install -g grunt-cli\r\n\r\nRun the following commands in two separate terminals to create a blissful development experience where your browser\r\nauto-refreshes when files change on your hard drive.\r\n\r\n    mvn\r\n    grunt\r\n\r\nBower is used to manage CSS and JavaScript dependencies used in this application. You can upgrade dependencies by\r\nspecifying a newer version in `bower.json`. You can also run `bower update` and `bower install` to manage dependencies.\r\nAdd the `-h` flag on any command to see how you can use it. For example, `bower update -h`.\r\n\r\n# Building for production\r\n\r\nTo optimize the bssuite client for production, run:\r\n\r\n    mvn -Pprod clean package\r\n\r\nThis will concatenate and minify CSS and JavaScript files. It will also modify `index.html` so it references\r\nthese new files.\r\n\r\nTo ensure everything worked, run:\r\n\r\n    java -jar target/*.war --spring.profiles.active=prod\r\n\r\nThen navigate to [http://localhost:8080](http://localhost:8080) in your browser.\r\n\r\n# Testing\r\n\r\nUnit tests are run by [Karma][] and written with [Jasmine][]. They're located in `src/test/javascript` and can be run with:\r\n\r\n    grunt test\r\n\r\n# Continuous Integration\r\n\r\nTo setup this project in Jenkins, use the following configuration:\r\n\r\n* Project name: `bssuite`\r\n* Source Code Management\r\n    * Git Repository: `git@github.com:xxxx/bssuite.git`\r\n    * Branches to build: `*/master`\r\n    * Additional Behaviours: `Wipe out repository & force clone`\r\n* Build Triggers\r\n    * Poll SCM / Schedule: `H/5 * * * *`\r\n* Build\r\n    * Invoke Maven / Tasks: `-Pprod clean package`\r\n* Post-build Actions\r\n    * Publish JUnit test result report / Test Report XMLs: `build/test-results/*.xml`\r\n\r\n[JHipster]: https://jhipster.github.io/\r\n[Node.js]: https://nodejs.org/\r\n[Bower]: http://bower.io/\r\n[Grunt]: http://gruntjs.com/\r\n[BrowserSync]: http://www.browsersync.io/\r\n[Karma]: http://karma-runner.github.io/\r\n[Jasmine]: http://jasmine.github.io/2.0/introduction.html\r\n[Protractor]: https://angular.github.io/protractor/\r\n","google":"UA-17279194-4","note":"Don't delete this file! It's used internally to help with page regeneration."}